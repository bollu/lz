

def mapTree._main (x_1 : obj) (x_2 : obj) : obj :=
  case x_2 : obj of
  Tree.Nil →
    ret x_2
  Tree.Node →
    let x_3 : obj := proj[0] x_2;
    let x_4 : obj := proj[1] x_2;
    let x_5 : obj := proj[2] x_2;
    let x_6 : obj := app x_1 x_3;
    let x_7 : obj := mapTree._main x_1 x_4;
    let x_8 : obj := mapTree._main x_1 x_5;
    let x_9 : obj := ctor_1[Tree.Node] x_6 x_7 x_8;
    ret x_9

def mapTree (x_1 : obj) (x_2 : obj) : obj :=
  let x_3 : obj := mapTree._main x_1 x_2;
  ret x_3