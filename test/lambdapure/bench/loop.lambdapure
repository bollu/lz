
def Array.forInUnsafe.loop._at.sum._spec_1 (x_1 : obj) (x_2 : usize) (x_3 : usize) (x_4 : obj) : obj :=
  let x_5 : u8 := USize.decLt x_3 x_2;
  case x_5 : obj of
  Bool.false →
    ret x_4
  Bool.true →
    let x_6 : obj := Array.uget ◾ x_1 x_3 ◾;
    let x_7 : obj := Nat.add x_4 x_6;
    let x_8 : usize := 1;
    let x_9 : usize := USize.add x_3 x_8;
    let x_10 : obj := Array.forInUnsafe.loop._at.sum._spec_1 x_1 x_2 x_9 x_7;
    ret x_10

def sum (x_1 : obj) : obj :=
  let x_2 : obj := Array.size x_1;
  let x_3 : usize := USize.ofNat x_2;
  let x_4 : usize := 0;
  let x_5 : obj := 0;
  let x_6 : obj := Array.forInUnsafe.loop._at.sum._spec_1 x_1 x_3 x_4 x_5;
  ret x_6
